#################################################################Lesson 2 Tasks

#===============================================================================
#1) By considering the terms in the Fibonacci sequence whose values
#   do not exceed four million, find the sum of the even-valued terms.
#===============================================================================
def getFibonacciEvenValesSum(num):
   init_even_sum = 2
   init_list = [1, 2]
   i = 2
   while init_list[-1] < num:
      init_list.append(init_list[i-2]+init_list[i-1])
      init_even_sum += ((~init_list[i]&1))*init_list[i]
      i = i + 1
      #print init_list
   return init_even_sum

#===============================================================================
#2) Remove Duplicates from Sorted Array.
#===============================================================================
class Solution(object):
    def removeDuplicates(self, nums):
        nums.append("")
        i = 0
        while (nums[i] != ""):
            if nums[i+1] > nums[i]:
                nums = nums
                i = i + 1
            elif nums[i+1] == nums[i]:
                nums.remove(nums[i+1])
        return nums.remove("")

#===============================================================================
#3) Longest Substring Without Repeating Characters
#   My first C++ code.
#===============================================================================
#include <iostream>
#include <string>
using namespace std;

void duplicateASCIIsymbols(string s, uint64_t size) {
   uint64_t* bitset_arr = new uint64_t[size];  // This line does not belong to me.
   uint64_t shift1 = 1;

   for (int i = 0; i < size; i++)
   {
      bitset_arr[i] = 0;
   }
   for (uint32_t i = 0; i <= s.size(); i++) {
      uint64_t current_idx = 0;
      current_idx = shift1 << (s[i] % 64);
      if (bitset_arr[s[i] / 64] & current_idx) {
         cout << "Duplicate is appeared. The symbol is: " << (s[i]) << "\n";
         break;
      }
      else {
         bitset_arr[s[i] / 64] = bitset_arr[s[i] / 64] | current_idx;
         cout << "The unique symbol is: " << (s[i]) << "\n";
      }
   }
   delete[] bitset_arr; // This line does not belong to me.
}


int main() {
   duplicateASCIIsymbols("aBdGtHyuoOKlaIopMN", 1024);
   return 0;
}

